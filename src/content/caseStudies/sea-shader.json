{
  "slug": "sea-shader",
  "title": "Raging Sea Shader",
  "intro": "Real-time ocean with layered wave displacement, on-GPU lighting, and tidy shader includes — built with Vite, Three.js, and GLSL.",
  "links": {
    "live": "https://adamjackczyk.github.io/THREEjs-raging-sea/",
    "repo": "https://github.com/Adamjackczyk/THREEjs-raging-sea"
  },
  "heroMedia": { "type": "video", "src": "/media/sea-loop.mp4" },

  "problem": "Create a convincing ocean that runs ~60 FPS on typical laptops, with shader code organized for easy look-dev and lighting tweaks.",
  "tools": [
    "JavaScript (ES Modules)",
    "Vite",
    "Three.js",
    "GLSL (vertex/fragment)",
    "Shader includes (ambient, directional, point light, Perlin noise)"
  ],

  "solution": [
    "Single plane mesh with **GPU vertex displacement** (stacked waves/noise) to avoid heavy geometry updates.",
    "Modular **GLSL includes** for lighting and noise: `ambientLight`, `directionalLight`, `pointLight`, and `perlinClassic3D` keep shaders readable.",
    "Lighting computed in the fragment shader; normals reconstructed on-GPU (via derivatives) for crisp specular highlights without normal maps.",
    "Tunable uniforms (amplitude, frequency, speed, color/fog) for quick look-dev; all wired in `script.js`.",
    "Vite for instant reloads and a simple static deploy to GitHub Pages."
  ],

  "results": [
    "≈60 FPS on desktop targets with sensible DPR.",
    "Shader files remain small and focused: wave math in water shader, helpers in `/includes`."
  ],

  "highlights": [
    { "label": "Geometry", "value": "1 plane, GPU-displaced" },
    { "label": "Normals", "value": "On-GPU (derivatives)" },
    { "label": "Build", "value": "Vite" }
  ],

  "codePointers": [
    { "label": "Wave/lighting shaders", "path": "src/shaders/water/*.glsl" },
    { "label": "Ambient light include", "path": "src/shaders/includes/ambientLight.glsl" },
    { "label": "Directional light include", "path": "src/shaders/includes/directionalLight.glsl" },
    { "label": "Point light include", "path": "src/shaders/includes/pointLight.glsl" },
    { "label": "Perlin noise (3D)", "path": "src/shaders/includes/perlinClassic3D.glsl" },
    { "label": "Scene setup & uniforms", "path": "src/script.js" },
    { "label": "Entry / template", "path": "src/index.html" },
    { "label": "Vite config", "path": "vite.config.js" }
  ],

  "next": [
    "Screen-space reflections / subtle bloom pass with a quality toggle",
    "Wind presets (Beaufort scale) and gust parameter",
    "Mobile-friendly perf mode (lower tesselation + capped DPR)"
  ]
}
